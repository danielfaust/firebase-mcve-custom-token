# -*- coding: utf-8 -*-

# å¥½

###################################################################################################

import sys
sys.dont_write_bytecode = True

###################################################################################################

import time
import json
from urlparse import urlparse, parse_qs

from jose import jwt
import Crypto.PublicKey.RSA as RSA

###################################################################################################

def do_GET(self, config):
  
  parsed = urlparse(self.path)
  
  args = parse_qs(parsed.query)
  
  if parsed.path == "/":
  
    with open('server-credentials.json', 'r') as credentials_file:
      
      credentials_data = json.loads(credentials_file.read())
      
      unix_now = int(time.time())
      
      private_key = RSA.importKey(credentials_data['private_key'])
      
      # https://firebase.google.com/docs/auth/admin/create-custom-tokens
      
      payload = {
        'alg': 'RS256',
        'iss': credentials_data['client_email'],
        'sub': credentials_data['client_email'],
        'aud': 'https://identitytoolkit.googleapis.com/google.identity.identitytoolkit.v1.IdentityToolkit',
        'iat': unix_now,
        'exp': unix_now + 60,
        'uid': config['uid'],
      }
      
      custom_jwt = jwt.encode(payload, private_key, algorithm='RS256')
      
      with open('index.html', 'r') as template_file:
        
        template_string = template_file.read()
        template_string = template_string.replace('{@@ jwt @@}', custom_jwt)
        template_string = template_string.replace('{@@ payload @@}', json.dumps(payload, indent=1))
        template_string = template_string.replace('{@@ firebase_api_key @@}', config['html']['apiKey'])
        template_string = template_string.replace('{@@ firebase_auth_domain @@}', config['html']['authDomain'])
        
        self.send_response(200)
        self.send_header('Content-type', 'text/html')
        self.end_headers()
        self.wfile.write(template_string)
        return
        
    self.send_response(200)
    self.send_header('Content-type', 'text/plain')
    self.end_headers()
    self.wfile.write('SOME ERROR')
    return

###################################################################################################
